// Code generated by protoc-gen-go. DO NOT EDIT.
// source: articles.proto

package article_server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Author struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Login                string   `protobuf:"bytes,2,opt,name=Login,proto3" json:"Login,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Surname              string   `protobuf:"bytes,4,opt,name=Surname,proto3" json:"Surname,omitempty"`
	AvatarUrl            string   `protobuf:"bytes,5,opt,name=AvatarUrl,proto3" json:"AvatarUrl,omitempty"`
	Description          string   `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	Email                string   `protobuf:"bytes,7,opt,name=Email,proto3" json:"Email,omitempty"`
	Password             string   `protobuf:"bytes,8,opt,name=Password,proto3" json:"Password,omitempty"`
	Score                int64    `protobuf:"varint,10,opt,name=Score,proto3" json:"Score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Author) Reset()         { *m = Author{} }
func (m *Author) String() string { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()    {}
func (*Author) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{0}
}

func (m *Author) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Author.Unmarshal(m, b)
}
func (m *Author) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Author.Marshal(b, m, deterministic)
}
func (m *Author) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Author.Merge(m, src)
}
func (m *Author) XXX_Size() int {
	return xxx_messageInfo_Author.Size(m)
}
func (m *Author) XXX_DiscardUnknown() {
	xxx_messageInfo_Author.DiscardUnknown(m)
}

var xxx_messageInfo_Author proto.InternalMessageInfo

func (m *Author) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Author) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *Author) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Author) GetSurname() string {
	if m != nil {
		return m.Surname
	}
	return ""
}

func (m *Author) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *Author) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Author) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Author) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Author) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

type Preview struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	DateTime             string   `protobuf:"bytes,2,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	PreviewUrl           string   `protobuf:"bytes,3,opt,name=PreviewUrl,proto3" json:"PreviewUrl,omitempty"`
	Tags                 []string `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Title                string   `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`
	Category             string   `protobuf:"bytes,6,opt,name=Category,proto3" json:"Category,omitempty"`
	Text                 string   `protobuf:"bytes,7,opt,name=Text,proto3" json:"Text,omitempty"`
	Author               *Author  `protobuf:"bytes,8,opt,name=Author,proto3" json:"Author,omitempty"`
	CommentsUrl          string   `protobuf:"bytes,9,opt,name=CommentsUrl,proto3" json:"CommentsUrl,omitempty"`
	Comments             int64    `protobuf:"varint,10,opt,name=Comments,proto3" json:"Comments,omitempty"`
	Likes                int64    `protobuf:"varint,11,opt,name=Likes,proto3" json:"Likes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Preview) Reset()         { *m = Preview{} }
func (m *Preview) String() string { return proto.CompactTextString(m) }
func (*Preview) ProtoMessage()    {}
func (*Preview) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{1}
}

func (m *Preview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Preview.Unmarshal(m, b)
}
func (m *Preview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Preview.Marshal(b, m, deterministic)
}
func (m *Preview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Preview.Merge(m, src)
}
func (m *Preview) XXX_Size() int {
	return xxx_messageInfo_Preview.Size(m)
}
func (m *Preview) XXX_DiscardUnknown() {
	xxx_messageInfo_Preview.DiscardUnknown(m)
}

var xxx_messageInfo_Preview proto.InternalMessageInfo

func (m *Preview) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Preview) GetDateTime() string {
	if m != nil {
		return m.DateTime
	}
	return ""
}

func (m *Preview) GetPreviewUrl() string {
	if m != nil {
		return m.PreviewUrl
	}
	return ""
}

func (m *Preview) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Preview) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Preview) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Preview) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Preview) GetAuthor() *Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Preview) GetCommentsUrl() string {
	if m != nil {
		return m.CommentsUrl
	}
	return ""
}

func (m *Preview) GetComments() int64 {
	if m != nil {
		return m.Comments
	}
	return 0
}

func (m *Preview) GetLikes() int64 {
	if m != nil {
		return m.Likes
	}
	return 0
}

type FullArticle struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	DateTime             string   `protobuf:"bytes,2,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	PreviewUrl           string   `protobuf:"bytes,3,opt,name=PreviewUrl,proto3" json:"PreviewUrl,omitempty"`
	Tags                 []string `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Title                string   `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`
	Category             string   `protobuf:"bytes,6,opt,name=Category,proto3" json:"Category,omitempty"`
	Text                 string   `protobuf:"bytes,7,opt,name=Text,proto3" json:"Text,omitempty"`
	Author               *Author  `protobuf:"bytes,8,opt,name=Author,proto3" json:"Author,omitempty"`
	CommentsUrl          string   `protobuf:"bytes,9,opt,name=CommentsUrl,proto3" json:"CommentsUrl,omitempty"`
	Comments             int64    `protobuf:"varint,10,opt,name=Comments,proto3" json:"Comments,omitempty"`
	Likes                int64    `protobuf:"varint,11,opt,name=Likes,proto3" json:"Likes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FullArticle) Reset()         { *m = FullArticle{} }
func (m *FullArticle) String() string { return proto.CompactTextString(m) }
func (*FullArticle) ProtoMessage()    {}
func (*FullArticle) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{2}
}

func (m *FullArticle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FullArticle.Unmarshal(m, b)
}
func (m *FullArticle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FullArticle.Marshal(b, m, deterministic)
}
func (m *FullArticle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullArticle.Merge(m, src)
}
func (m *FullArticle) XXX_Size() int {
	return xxx_messageInfo_FullArticle.Size(m)
}
func (m *FullArticle) XXX_DiscardUnknown() {
	xxx_messageInfo_FullArticle.DiscardUnknown(m)
}

var xxx_messageInfo_FullArticle proto.InternalMessageInfo

func (m *FullArticle) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FullArticle) GetDateTime() string {
	if m != nil {
		return m.DateTime
	}
	return ""
}

func (m *FullArticle) GetPreviewUrl() string {
	if m != nil {
		return m.PreviewUrl
	}
	return ""
}

func (m *FullArticle) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *FullArticle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *FullArticle) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *FullArticle) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *FullArticle) GetAuthor() *Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *FullArticle) GetCommentsUrl() string {
	if m != nil {
		return m.CommentsUrl
	}
	return ""
}

func (m *FullArticle) GetComments() int64 {
	if m != nil {
		return m.Comments
	}
	return 0
}

func (m *FullArticle) GetLikes() int64 {
	if m != nil {
		return m.Likes
	}
	return 0
}

type Repview struct {
	Preview              []*Preview `protobuf:"bytes,1,rep,name=Preview,proto3" json:"Preview,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Repview) Reset()         { *m = Repview{} }
func (m *Repview) String() string { return proto.CompactTextString(m) }
func (*Repview) ProtoMessage()    {}
func (*Repview) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{3}
}

func (m *Repview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repview.Unmarshal(m, b)
}
func (m *Repview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repview.Marshal(b, m, deterministic)
}
func (m *Repview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repview.Merge(m, src)
}
func (m *Repview) XXX_Size() int {
	return xxx_messageInfo_Repview.Size(m)
}
func (m *Repview) XXX_DiscardUnknown() {
	xxx_messageInfo_Repview.DiscardUnknown(m)
}

var xxx_messageInfo_Repview proto.InternalMessageInfo

func (m *Repview) GetPreview() []*Preview {
	if m != nil {
		return m.Preview
	}
	return nil
}

type AView struct {
	Author               []*Author `protobuf:"bytes,1,rep,name=Author,proto3" json:"Author,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AView) Reset()         { *m = AView{} }
func (m *AView) String() string { return proto.CompactTextString(m) }
func (*AView) ProtoMessage()    {}
func (*AView) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{4}
}

func (m *AView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AView.Unmarshal(m, b)
}
func (m *AView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AView.Marshal(b, m, deterministic)
}
func (m *AView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AView.Merge(m, src)
}
func (m *AView) XXX_Size() int {
	return xxx_messageInfo_AView.Size(m)
}
func (m *AView) XXX_DiscardUnknown() {
	xxx_messageInfo_AView.DiscardUnknown(m)
}

var xxx_messageInfo_AView proto.InternalMessageInfo

func (m *AView) GetAuthor() []*Author {
	if m != nil {
		return m.Author
	}
	return nil
}

type Error struct {
	Status               int64    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{5}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Error) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Tags struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Chunk                *Chunk   `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tags) Reset()         { *m = Tags{} }
func (m *Tags) String() string { return proto.CompactTextString(m) }
func (*Tags) ProtoMessage()    {}
func (*Tags) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{6}
}

func (m *Tags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tags.Unmarshal(m, b)
}
func (m *Tags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tags.Marshal(b, m, deterministic)
}
func (m *Tags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tags.Merge(m, src)
}
func (m *Tags) XXX_Size() int {
	return xxx_messageInfo_Tags.Size(m)
}
func (m *Tags) XXX_DiscardUnknown() {
	xxx_messageInfo_Tags.DiscardUnknown(m)
}

var xxx_messageInfo_Tags proto.InternalMessageInfo

func (m *Tags) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Tags) GetChunk() *Chunk {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type Authors struct {
	Author               string   `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Chunk                *Chunk   `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Authors) Reset()         { *m = Authors{} }
func (m *Authors) String() string { return proto.CompactTextString(m) }
func (*Authors) ProtoMessage()    {}
func (*Authors) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{7}
}

func (m *Authors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Authors.Unmarshal(m, b)
}
func (m *Authors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Authors.Marshal(b, m, deterministic)
}
func (m *Authors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Authors.Merge(m, src)
}
func (m *Authors) XXX_Size() int {
	return xxx_messageInfo_Authors.Size(m)
}
func (m *Authors) XXX_DiscardUnknown() {
	xxx_messageInfo_Authors.DiscardUnknown(m)
}

var xxx_messageInfo_Authors proto.InternalMessageInfo

func (m *Authors) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Authors) GetChunk() *Chunk {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type Categories struct {
	Category             string   `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Chunk                *Chunk   `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Categories) Reset()         { *m = Categories{} }
func (m *Categories) String() string { return proto.CompactTextString(m) }
func (*Categories) ProtoMessage()    {}
func (*Categories) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{8}
}

func (m *Categories) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Categories.Unmarshal(m, b)
}
func (m *Categories) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Categories.Marshal(b, m, deterministic)
}
func (m *Categories) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Categories.Merge(m, src)
}
func (m *Categories) XXX_Size() int {
	return xxx_messageInfo_Categories.Size(m)
}
func (m *Categories) XXX_DiscardUnknown() {
	xxx_messageInfo_Categories.DiscardUnknown(m)
}

var xxx_messageInfo_Categories proto.InternalMessageInfo

func (m *Categories) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Categories) GetChunk() *Chunk {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type Queries struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Chunk                *Chunk   `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Queries) Reset()         { *m = Queries{} }
func (m *Queries) String() string { return proto.CompactTextString(m) }
func (*Queries) ProtoMessage()    {}
func (*Queries) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{9}
}

func (m *Queries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Queries.Unmarshal(m, b)
}
func (m *Queries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Queries.Marshal(b, m, deterministic)
}
func (m *Queries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Queries.Merge(m, src)
}
func (m *Queries) XXX_Size() int {
	return xxx_messageInfo_Queries.Size(m)
}
func (m *Queries) XXX_DiscardUnknown() {
	xxx_messageInfo_Queries.DiscardUnknown(m)
}

var xxx_messageInfo_Queries proto.InternalMessageInfo

func (m *Queries) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *Queries) GetChunk() *Chunk {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type Id struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{10}
}

func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (m *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(m, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Chunk struct {
	IdLastLoaded         string   `protobuf:"bytes,1,opt,name=idLastLoaded,proto3" json:"idLastLoaded,omitempty"`
	ChunkSize            int64    `protobuf:"varint,2,opt,name=chunkSize,proto3" json:"chunkSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{11}
}

func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (m *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(m, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetIdLastLoaded() string {
	if m != nil {
		return m.IdLastLoaded
	}
	return ""
}

func (m *Chunk) GetChunkSize() int64 {
	if m != nil {
		return m.ChunkSize
	}
	return 0
}

type Nothing struct {
	Dummy                bool     `protobuf:"varint,1,opt,name=dummy,proto3" json:"dummy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{12}
}

func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (m *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(m, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

func (m *Nothing) GetDummy() bool {
	if m != nil {
		return m.Dummy
	}
	return false
}

type Created struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Created) Reset()         { *m = Created{} }
func (m *Created) String() string { return proto.CompactTextString(m) }
func (*Created) ProtoMessage()    {}
func (*Created) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{13}
}

func (m *Created) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Created.Unmarshal(m, b)
}
func (m *Created) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Created.Marshal(b, m, deterministic)
}
func (m *Created) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Created.Merge(m, src)
}
func (m *Created) XXX_Size() int {
	return xxx_messageInfo_Created.Size(m)
}
func (m *Created) XXX_DiscardUnknown() {
	xxx_messageInfo_Created.DiscardUnknown(m)
}

var xxx_messageInfo_Created proto.InternalMessageInfo

func (m *Created) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ArticleCreate struct {
	Img                  string   `protobuf:"bytes,3,opt,name=Img,proto3" json:"Img,omitempty"`
	Tags                 []string `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Title                string   `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`
	Category             string   `protobuf:"bytes,6,opt,name=Category,proto3" json:"Category,omitempty"`
	Text                 string   `protobuf:"bytes,7,opt,name=Text,proto3" json:"Text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleCreate) Reset()         { *m = ArticleCreate{} }
func (m *ArticleCreate) String() string { return proto.CompactTextString(m) }
func (*ArticleCreate) ProtoMessage()    {}
func (*ArticleCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{14}
}

func (m *ArticleCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleCreate.Unmarshal(m, b)
}
func (m *ArticleCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleCreate.Marshal(b, m, deterministic)
}
func (m *ArticleCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleCreate.Merge(m, src)
}
func (m *ArticleCreate) XXX_Size() int {
	return xxx_messageInfo_ArticleCreate.Size(m)
}
func (m *ArticleCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleCreate.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleCreate proto.InternalMessageInfo

func (m *ArticleCreate) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *ArticleCreate) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ArticleCreate) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ArticleCreate) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *ArticleCreate) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Create struct {
	Art                  *ArticleCreate `protobuf:"bytes,1,opt,name=Art,proto3" json:"Art,omitempty"`
	Value                string         `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Create) Reset()         { *m = Create{} }
func (m *Create) String() string { return proto.CompactTextString(m) }
func (*Create) ProtoMessage()    {}
func (*Create) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{15}
}

func (m *Create) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Create.Unmarshal(m, b)
}
func (m *Create) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Create.Marshal(b, m, deterministic)
}
func (m *Create) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Create.Merge(m, src)
}
func (m *Create) XXX_Size() int {
	return xxx_messageInfo_Create.Size(m)
}
func (m *Create) XXX_DiscardUnknown() {
	xxx_messageInfo_Create.DiscardUnknown(m)
}

var xxx_messageInfo_Create proto.InternalMessageInfo

func (m *Create) GetArt() *ArticleCreate {
	if m != nil {
		return m.Art
	}
	return nil
}

func (m *Create) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ArticleUpdate struct {
	Id                   string   `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	Img                  string   `protobuf:"bytes,3,opt,name=Img,proto3" json:"Img,omitempty"`
	Tags                 []string `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Title                string   `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`
	Category             string   `protobuf:"bytes,6,opt,name=Category,proto3" json:"Category,omitempty"`
	Text                 string   `protobuf:"bytes,7,opt,name=Text,proto3" json:"Text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleUpdate) Reset()         { *m = ArticleUpdate{} }
func (m *ArticleUpdate) String() string { return proto.CompactTextString(m) }
func (*ArticleUpdate) ProtoMessage()    {}
func (*ArticleUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b0a0fd44626f41, []int{16}
}

func (m *ArticleUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleUpdate.Unmarshal(m, b)
}
func (m *ArticleUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleUpdate.Marshal(b, m, deterministic)
}
func (m *ArticleUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleUpdate.Merge(m, src)
}
func (m *ArticleUpdate) XXX_Size() int {
	return xxx_messageInfo_ArticleUpdate.Size(m)
}
func (m *ArticleUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleUpdate proto.InternalMessageInfo

func (m *ArticleUpdate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ArticleUpdate) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *ArticleUpdate) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ArticleUpdate) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ArticleUpdate) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *ArticleUpdate) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*Author)(nil), "article_server.Author")
	proto.RegisterType((*Preview)(nil), "article_server.Preview")
	proto.RegisterType((*FullArticle)(nil), "article_server.FullArticle")
	proto.RegisterType((*Repview)(nil), "article_server.Repview")
	proto.RegisterType((*AView)(nil), "article_server.AView")
	proto.RegisterType((*Error)(nil), "article_server.Error")
	proto.RegisterType((*Tags)(nil), "article_server.Tags")
	proto.RegisterType((*Authors)(nil), "article_server.Authors")
	proto.RegisterType((*Categories)(nil), "article_server.Categories")
	proto.RegisterType((*Queries)(nil), "article_server.Queries")
	proto.RegisterType((*Id)(nil), "article_server.Id")
	proto.RegisterType((*Chunk)(nil), "article_server.chunk")
	proto.RegisterType((*Nothing)(nil), "article_server.Nothing")
	proto.RegisterType((*Created)(nil), "article_server.Created")
	proto.RegisterType((*ArticleCreate)(nil), "article_server.ArticleCreate")
	proto.RegisterType((*Create)(nil), "article_server.create")
	proto.RegisterType((*ArticleUpdate)(nil), "article_server.ArticleUpdate")
}

func init() { proto.RegisterFile("articles.proto", fileDescriptor_c0b0a0fd44626f41) }

var fileDescriptor_c0b0a0fd44626f41 = []byte{
	// 834 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xdd, 0x6e, 0xe2, 0x46,
	0x14, 0x06, 0x1c, 0x63, 0x38, 0x4e, 0xd2, 0x6a, 0x44, 0x13, 0x97, 0xfe, 0xa1, 0xb9, 0x8a, 0x54,
	0x89, 0x2a, 0xf4, 0x22, 0x6a, 0x1b, 0xa9, 0x22, 0x21, 0x54, 0x48, 0x28, 0x4d, 0x0d, 0xe9, 0x6d,
	0x35, 0xc5, 0x23, 0x33, 0x8a, 0x8d, 0xe9, 0x78, 0x4c, 0x9a, 0xdd, 0x47, 0xd8, 0xc7, 0xd9, 0x8b,
	0x7d, 0x8e, 0x7d, 0x87, 0x7d, 0x90, 0xd5, 0xfc, 0xd8, 0x10, 0x48, 0xd8, 0xcd, 0x4a, 0xbb, 0x57,
	0x7b, 0xe7, 0xef, 0xcc, 0x99, 0x6f, 0xbe, 0xf3, 0x2b, 0xc3, 0x3e, 0xe1, 0x82, 0x4d, 0x22, 0x9a,
	0xb6, 0xe7, 0x3c, 0x11, 0x09, 0xca, 0xf1, 0x3f, 0x29, 0xe5, 0x0b, 0xca, 0xf1, 0x9b, 0x32, 0x54,
	0xbb, 0x99, 0x98, 0x26, 0x1c, 0xed, 0x43, 0x65, 0x10, 0x78, 0xe5, 0x56, 0xf9, 0xc8, 0xf2, 0x2b,
	0x83, 0x00, 0x35, 0xc0, 0x1e, 0x26, 0x21, 0x9b, 0x79, 0x95, 0x56, 0xf9, 0xa8, 0xee, 0x6b, 0x80,
	0x10, 0xec, 0x5c, 0x92, 0x98, 0x7a, 0x96, 0x32, 0xaa, 0x6f, 0xe4, 0x81, 0x33, 0xca, 0xf8, 0x4c,
	0x9a, 0x77, 0x94, 0x39, 0x87, 0xe8, 0x5b, 0xa8, 0x77, 0x17, 0x44, 0x10, 0x7e, 0xcd, 0x23, 0xcf,
	0x56, 0x67, 0x4b, 0x03, 0x6a, 0x81, 0xdb, 0xa3, 0xe9, 0x84, 0xb3, 0xb9, 0x60, 0xc9, 0xcc, 0xab,
	0xaa, 0xf3, 0x55, 0x93, 0xd4, 0x70, 0x11, 0x13, 0x16, 0x79, 0x8e, 0xd6, 0xa0, 0x00, 0x6a, 0x42,
	0xed, 0x8a, 0xa4, 0xe9, 0x6d, 0xc2, 0x03, 0xaf, 0xa6, 0x0e, 0x0a, 0x2c, 0x6f, 0x8c, 0x26, 0x09,
	0xa7, 0x1e, 0xa8, 0x40, 0x34, 0xc0, 0x2f, 0x2b, 0xe0, 0x5c, 0x71, 0xba, 0x60, 0xf4, 0x76, 0x25,
	0xce, 0xba, 0x8a, 0xb3, 0x09, 0xb5, 0x1e, 0x11, 0x74, 0xcc, 0x62, 0x6a, 0x42, 0x2d, 0x30, 0xfa,
	0x1e, 0xc0, 0x5c, 0x93, 0x01, 0xe8, 0x98, 0x57, 0x2c, 0x32, 0x1b, 0x63, 0x12, 0xa6, 0xde, 0x4e,
	0xcb, 0x92, 0xd9, 0x90, 0xdf, 0x52, 0xc1, 0x98, 0x89, 0x88, 0x9a, 0x78, 0x35, 0x90, 0xaf, 0x9c,
	0x13, 0x41, 0xc3, 0x84, 0xdf, 0x99, 0x40, 0x0b, 0xac, 0x58, 0xe8, 0xff, 0xc2, 0x04, 0xa9, 0xbe,
	0x51, 0x3b, 0xaf, 0x8b, 0x8a, 0xd0, 0xed, 0x1c, 0xb4, 0xef, 0x57, 0xae, 0xad, 0x4f, 0xfd, 0xbc,
	0x7a, 0x2d, 0x70, 0xcf, 0x93, 0x38, 0xa6, 0x33, 0x91, 0x4a, 0xa9, 0x75, 0x9d, 0xcb, 0x15, 0x93,
	0x52, 0x60, 0xa0, 0x49, 0x4e, 0x81, 0x55, 0xad, 0xd9, 0x0d, 0x4d, 0x3d, 0x57, 0x67, 0x4d, 0x01,
	0xfc, 0xaa, 0x02, 0x6e, 0x3f, 0x8b, 0xa2, 0xae, 0x7e, 0xf9, 0x73, 0xe6, 0xde, 0x3b, 0x73, 0xa7,
	0xe0, 0xf8, 0x74, 0xae, 0xda, 0xed, 0xb8, 0xe8, 0x3c, 0xaf, 0xdc, 0xb2, 0x8e, 0xdc, 0xce, 0xe1,
	0xba, 0x1e, 0x73, 0xec, 0xe7, 0x7e, 0xf8, 0x04, 0xec, 0xee, 0xdf, 0xf2, 0xee, 0x32, 0x14, 0x7d,
	0xf5, 0x1d, 0xa1, 0xe0, 0x63, 0xb0, 0x2f, 0x38, 0x4f, 0x38, 0x3a, 0x80, 0x6a, 0x2a, 0x88, 0xc8,
	0x52, 0x33, 0xcf, 0x06, 0xa1, 0x2f, 0xc1, 0x8a, 0xd3, 0xd0, 0x14, 0x4b, 0x7e, 0xe2, 0x0b, 0x5d,
	0x07, 0x79, 0x22, 0x48, 0x68, 0x8a, 0x2b, 0x3f, 0xd1, 0x8f, 0x60, 0x4f, 0xa6, 0xd9, 0xec, 0x46,
	0x79, 0xbb, 0x9d, 0xaf, 0xd6, 0xdf, 0x56, 0x87, 0xbe, 0xf6, 0xc1, 0x97, 0xe0, 0x68, 0x0d, 0xa9,
	0x7c, 0x9b, 0xe4, 0xa2, 0x25, 0x99, 0x41, 0x4f, 0xe3, 0xbb, 0x06, 0x30, 0x45, 0x66, 0x34, 0x95,
	0x05, 0x98, 0xe4, 0x2d, 0xa0, 0x49, 0x0b, 0xfc, 0x34, 0xda, 0x21, 0x38, 0x7f, 0x65, 0x54, 0x71,
	0x36, 0xc0, 0xfe, 0x2f, 0xa3, 0x05, 0xa1, 0x06, 0x4f, 0x63, 0x6b, 0xc8, 0x79, 0x90, 0x53, 0xc1,
	0x8a, 0xa9, 0x60, 0x01, 0x1e, 0x18, 0x0a, 0x84, 0x61, 0x97, 0x05, 0x43, 0x92, 0x8a, 0x61, 0x42,
	0x02, 0x9a, 0xbb, 0xdc, 0xb3, 0xc9, 0x05, 0xa9, 0x9c, 0x47, 0xec, 0x99, 0x9e, 0x21, 0xcb, 0x5f,
	0x1a, 0xf0, 0x0f, 0xe0, 0x5c, 0x26, 0x62, 0xca, 0x66, 0xa1, 0x94, 0x1b, 0x64, 0x71, 0xac, 0xe5,
	0xd6, 0x7c, 0x0d, 0xf0, 0xd7, 0xe0, 0x9c, 0x73, 0x4a, 0x04, 0x5d, 0x95, 0x61, 0x29, 0x19, 0xcf,
	0x61, 0xcf, 0xcc, 0xad, 0xf6, 0x90, 0x15, 0x1e, 0xc4, 0xa1, 0x19, 0x45, 0xf9, 0xf9, 0xf1, 0x66,
	0x10, 0xff, 0x09, 0xd5, 0x89, 0x7e, 0xf5, 0x27, 0xb0, 0xba, 0x5c, 0x28, 0x5d, 0x6e, 0xe7, 0xbb,
	0x8d, 0xfe, 0x5d, 0x55, 0xe8, 0x4b, 0x4f, 0x29, 0x60, 0x41, 0xa2, 0x2c, 0xdf, 0x28, 0x1a, 0xe0,
	0x17, 0xe5, 0x22, 0x9c, 0xeb, 0x79, 0x20, 0x89, 0xf5, 0x32, 0xaa, 0x14, 0xcb, 0xe8, 0x13, 0x86,
	0xd7, 0x79, 0x6d, 0xc3, 0x17, 0x46, 0x4d, 0x8f, 0x46, 0x6c, 0x21, 0x3b, 0xe7, 0x17, 0xb0, 0xfb,
	0x54, 0x4c, 0xa6, 0xe8, 0xe1, 0x9e, 0x69, 0x6e, 0x8c, 0xbd, 0x59, 0x10, 0xb8, 0x84, 0x4e, 0xc1,
	0xf9, 0x83, 0x8a, 0xb3, 0xbb, 0x41, 0x0f, 0xa1, 0x75, 0xaf, 0x41, 0xd0, 0xfc, 0x66, 0xdd, 0xb6,
	0xb2, 0x93, 0x71, 0x09, 0xfd, 0x06, 0x35, 0x75, 0x7b, 0x4c, 0x42, 0xd4, 0x58, 0x77, 0x95, 0x41,
	0x6f, 0x7b, 0xba, 0x0b, 0xae, 0xba, 0x6c, 0x76, 0xe1, 0xe1, 0xc3, 0x0b, 0x66, 0x2b, 0x45, 0x1f,
	0xf6, 0x14, 0x45, 0x91, 0xb1, 0xe6, 0xba, 0xef, 0x72, 0x92, 0xb7, 0xf1, 0xfc, 0x0e, 0xf5, 0x3e,
	0x9b, 0x05, 0x3a, 0x90, 0x0d, 0x3f, 0x33, 0xb6, 0xdb, 0x09, 0x5c, 0x49, 0x90, 0xef, 0xa1, 0x47,
	0x29, 0x36, 0x0a, 0xa4, 0x96, 0x2d, 0x2e, 0xa1, 0x33, 0xd8, 0x55, 0x04, 0xe6, 0x97, 0xe9, 0x83,
	0x44, 0x9c, 0x41, 0xd5, 0x34, 0xe8, 0x63, 0xcd, 0xae, 0x8f, 0x37, 0x39, 0xcc, 0xa4, 0xe3, 0x12,
	0xfa, 0x15, 0xec, 0x91, 0x48, 0x38, 0x45, 0x1b, 0xfb, 0x5e, 0x0f, 0xd5, 0xe6, 0x5d, 0xb3, 0x04,
	0x70, 0x09, 0x9d, 0x40, 0xb5, 0x47, 0x23, 0x2a, 0xe8, 0x83, 0xad, 0xf4, 0xf8, 0xa3, 0xff, 0x56,
	0xd5, 0x0f, 0xe2, 0xcf, 0x6f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc2, 0x3f, 0x7e, 0x57, 0x32, 0x0a,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArticleDeliveryClient is the client API for ArticleDelivery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArticleDeliveryClient interface {
	Fetch(ctx context.Context, in *Chunk, opts ...grpc.CallOption) (*Repview, error)
	GetByID(ctx context.Context, in *Id, opts ...grpc.CallOption) (*FullArticle, error)
	GetByTag(ctx context.Context, in *Tags, opts ...grpc.CallOption) (*Repview, error)
	GetByAuthor(ctx context.Context, in *Authors, opts ...grpc.CallOption) (*Repview, error)
	GetByCategory(ctx context.Context, in *Categories, opts ...grpc.CallOption) (*Repview, error)
	FindByTag(ctx context.Context, in *Queries, opts ...grpc.CallOption) (*Repview, error)
	FindAuthors(ctx context.Context, in *Queries, opts ...grpc.CallOption) (*AView, error)
	FindArticles(ctx context.Context, in *Queries, opts ...grpc.CallOption) (*Repview, error)
	Update(ctx context.Context, in *ArticleUpdate, opts ...grpc.CallOption) (*Nothing, error)
	Store(ctx context.Context, in *Create, opts ...grpc.CallOption) (*Created, error)
	Delete(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Nothing, error)
}

type articleDeliveryClient struct {
	cc *grpc.ClientConn
}

func NewArticleDeliveryClient(cc *grpc.ClientConn) ArticleDeliveryClient {
	return &articleDeliveryClient{cc}
}

func (c *articleDeliveryClient) Fetch(ctx context.Context, in *Chunk, opts ...grpc.CallOption) (*Repview, error) {
	out := new(Repview)
	err := c.cc.Invoke(ctx, "/article_server.ArticleDelivery/Fetch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleDeliveryClient) GetByID(ctx context.Context, in *Id, opts ...grpc.CallOption) (*FullArticle, error) {
	out := new(FullArticle)
	err := c.cc.Invoke(ctx, "/article_server.ArticleDelivery/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleDeliveryClient) GetByTag(ctx context.Context, in *Tags, opts ...grpc.CallOption) (*Repview, error) {
	out := new(Repview)
	err := c.cc.Invoke(ctx, "/article_server.ArticleDelivery/GetByTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleDeliveryClient) GetByAuthor(ctx context.Context, in *Authors, opts ...grpc.CallOption) (*Repview, error) {
	out := new(Repview)
	err := c.cc.Invoke(ctx, "/article_server.ArticleDelivery/GetByAuthor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleDeliveryClient) GetByCategory(ctx context.Context, in *Categories, opts ...grpc.CallOption) (*Repview, error) {
	out := new(Repview)
	err := c.cc.Invoke(ctx, "/article_server.ArticleDelivery/GetByCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleDeliveryClient) FindByTag(ctx context.Context, in *Queries, opts ...grpc.CallOption) (*Repview, error) {
	out := new(Repview)
	err := c.cc.Invoke(ctx, "/article_server.ArticleDelivery/FindByTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleDeliveryClient) FindAuthors(ctx context.Context, in *Queries, opts ...grpc.CallOption) (*AView, error) {
	out := new(AView)
	err := c.cc.Invoke(ctx, "/article_server.ArticleDelivery/FindAuthors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleDeliveryClient) FindArticles(ctx context.Context, in *Queries, opts ...grpc.CallOption) (*Repview, error) {
	out := new(Repview)
	err := c.cc.Invoke(ctx, "/article_server.ArticleDelivery/FindArticles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleDeliveryClient) Update(ctx context.Context, in *ArticleUpdate, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/article_server.ArticleDelivery/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleDeliveryClient) Store(ctx context.Context, in *Create, opts ...grpc.CallOption) (*Created, error) {
	out := new(Created)
	err := c.cc.Invoke(ctx, "/article_server.ArticleDelivery/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleDeliveryClient) Delete(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/article_server.ArticleDelivery/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArticleDeliveryServer is the server API for ArticleDelivery service.
type ArticleDeliveryServer interface {
	Fetch(context.Context, *Chunk) (*Repview, error)
	GetByID(context.Context, *Id) (*FullArticle, error)
	GetByTag(context.Context, *Tags) (*Repview, error)
	GetByAuthor(context.Context, *Authors) (*Repview, error)
	GetByCategory(context.Context, *Categories) (*Repview, error)
	FindByTag(context.Context, *Queries) (*Repview, error)
	FindAuthors(context.Context, *Queries) (*AView, error)
	FindArticles(context.Context, *Queries) (*Repview, error)
	Update(context.Context, *ArticleUpdate) (*Nothing, error)
	Store(context.Context, *Create) (*Created, error)
	Delete(context.Context, *Id) (*Nothing, error)
}

// UnimplementedArticleDeliveryServer can be embedded to have forward compatible implementations.
type UnimplementedArticleDeliveryServer struct {
}

func (*UnimplementedArticleDeliveryServer) Fetch(ctx context.Context, req *Chunk) (*Repview, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fetch not implemented")
}
func (*UnimplementedArticleDeliveryServer) GetByID(ctx context.Context, req *Id) (*FullArticle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}
func (*UnimplementedArticleDeliveryServer) GetByTag(ctx context.Context, req *Tags) (*Repview, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByTag not implemented")
}
func (*UnimplementedArticleDeliveryServer) GetByAuthor(ctx context.Context, req *Authors) (*Repview, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByAuthor not implemented")
}
func (*UnimplementedArticleDeliveryServer) GetByCategory(ctx context.Context, req *Categories) (*Repview, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByCategory not implemented")
}
func (*UnimplementedArticleDeliveryServer) FindByTag(ctx context.Context, req *Queries) (*Repview, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByTag not implemented")
}
func (*UnimplementedArticleDeliveryServer) FindAuthors(ctx context.Context, req *Queries) (*AView, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAuthors not implemented")
}
func (*UnimplementedArticleDeliveryServer) FindArticles(ctx context.Context, req *Queries) (*Repview, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindArticles not implemented")
}
func (*UnimplementedArticleDeliveryServer) Update(ctx context.Context, req *ArticleUpdate) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedArticleDeliveryServer) Store(ctx context.Context, req *Create) (*Created, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Store not implemented")
}
func (*UnimplementedArticleDeliveryServer) Delete(ctx context.Context, req *Id) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterArticleDeliveryServer(s *grpc.Server, srv ArticleDeliveryServer) {
	s.RegisterService(&_ArticleDelivery_serviceDesc, srv)
}

func _ArticleDelivery_Fetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Chunk)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleDeliveryServer).Fetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article_server.ArticleDelivery/Fetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleDeliveryServer).Fetch(ctx, req.(*Chunk))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleDelivery_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleDeliveryServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article_server.ArticleDelivery/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleDeliveryServer).GetByID(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleDelivery_GetByTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tags)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleDeliveryServer).GetByTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article_server.ArticleDelivery/GetByTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleDeliveryServer).GetByTag(ctx, req.(*Tags))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleDelivery_GetByAuthor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Authors)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleDeliveryServer).GetByAuthor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article_server.ArticleDelivery/GetByAuthor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleDeliveryServer).GetByAuthor(ctx, req.(*Authors))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleDelivery_GetByCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Categories)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleDeliveryServer).GetByCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article_server.ArticleDelivery/GetByCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleDeliveryServer).GetByCategory(ctx, req.(*Categories))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleDelivery_FindByTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Queries)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleDeliveryServer).FindByTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article_server.ArticleDelivery/FindByTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleDeliveryServer).FindByTag(ctx, req.(*Queries))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleDelivery_FindAuthors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Queries)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleDeliveryServer).FindAuthors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article_server.ArticleDelivery/FindAuthors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleDeliveryServer).FindAuthors(ctx, req.(*Queries))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleDelivery_FindArticles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Queries)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleDeliveryServer).FindArticles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article_server.ArticleDelivery/FindArticles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleDeliveryServer).FindArticles(ctx, req.(*Queries))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleDelivery_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArticleUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleDeliveryServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article_server.ArticleDelivery/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleDeliveryServer).Update(ctx, req.(*ArticleUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleDelivery_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Create)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleDeliveryServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article_server.ArticleDelivery/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleDeliveryServer).Store(ctx, req.(*Create))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleDelivery_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleDeliveryServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article_server.ArticleDelivery/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleDeliveryServer).Delete(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArticleDelivery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "article_server.ArticleDelivery",
	HandlerType: (*ArticleDeliveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Fetch",
			Handler:    _ArticleDelivery_Fetch_Handler,
		},
		{
			MethodName: "GetByID",
			Handler:    _ArticleDelivery_GetByID_Handler,
		},
		{
			MethodName: "GetByTag",
			Handler:    _ArticleDelivery_GetByTag_Handler,
		},
		{
			MethodName: "GetByAuthor",
			Handler:    _ArticleDelivery_GetByAuthor_Handler,
		},
		{
			MethodName: "GetByCategory",
			Handler:    _ArticleDelivery_GetByCategory_Handler,
		},
		{
			MethodName: "FindByTag",
			Handler:    _ArticleDelivery_FindByTag_Handler,
		},
		{
			MethodName: "FindAuthors",
			Handler:    _ArticleDelivery_FindAuthors_Handler,
		},
		{
			MethodName: "FindArticles",
			Handler:    _ArticleDelivery_FindArticles_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ArticleDelivery_Update_Handler,
		},
		{
			MethodName: "Store",
			Handler:    _ArticleDelivery_Store_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ArticleDelivery_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "articles.proto",
}
